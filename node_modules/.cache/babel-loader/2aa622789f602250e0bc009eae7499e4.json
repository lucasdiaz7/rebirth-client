{"ast":null,"code":"var requestManager = require('../request-manager');\n\nvar cardModel = require('../models/cardModel');\n/**\n  * The cards class is the way to store card data of your customers safely to improve the shopping experience.\n  * This will allow your customers to complete their purchases much faster and easily, since they will not have to complete their card data again.\n  * This class must be used in conjunction with the [Customer class.]{@link https://www.mercadopago.com/developers/en/guides/online-payments/web-tokenize-checkout/customers-and-cards}\n  * @namespace card\n */\n\n\nvar card = module.exports = {\n  schema: cardModel\n};\n/**\n * Get all saved cards from a customer\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards/get/}\n * @function all\n * @param {string} customer_id Customer ID\n * @memberof card\n */\n\ncard.all = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards',\n  method: 'GET'\n});\n/**\n * Get card from card's id and customer's id\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards_id/get}\n * @function get\n * @param {string} customer_id Customer ID\n * @param {string} id Card ID\n * @memberof card\n */\n\ncard.get = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards/:id',\n  method: 'GET'\n});\n/**\n * Get card from card's id and customer's id\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards/get/}\n * @function findById\n * @param {string} customer_id Customer ID\n * @param {string} id Card ID\n * @memberof card\n */\n\ncard.findById = card.get;\n/**\n * Create a new card for provided Customer ID\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards/post/}\n * @function create\n * @param {string} customer_id Customer ID\n * @memberof card\n */\n\ncard.create = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards',\n  method: 'POST'\n});\n/**\n * Create a new card for provided Customer ID\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards/post/}\n * @function create\n * @param {string} customer_id Customer ID\n * @memberof card\n */\n\ncard.save = card.create;\n/**\n * Update card from customer id\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards_id/put/}\n * @function update\n * @param {string} customer_id Customer ID\n * @param {string} id Card ID\n * @memberof card\n */\n\ncard.update = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards/:id',\n  method: 'PUT'\n});\n/**\n * Delete card from customer id\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards_id/delete/}\n * @function delete\n * @param {string} customer_id Customer ID\n * @param {string} id Card ID\n * @memberof card\n */\n\ncard.delete = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards/:id',\n  method: 'DELETE'\n});","map":{"version":3,"names":["requestManager","require","cardModel","card","module","exports","schema","all","describe","path","method","get","findById","create","save","update","delete"],"sources":["C:/Backup/Desktop/LUCAS/henry/PROYECTO FINAL/PF-Rebirth/PF-Rebirth/client/node_modules/mercadopago/lib/resources/card.js"],"sourcesContent":["var requestManager = require('../request-manager');\nvar cardModel = require('../models/cardModel');\n\n/**\n  * The cards class is the way to store card data of your customers safely to improve the shopping experience.\n  * This will allow your customers to complete their purchases much faster and easily, since they will not have to complete their card data again.\n  * This class must be used in conjunction with the [Customer class.]{@link https://www.mercadopago.com/developers/en/guides/online-payments/web-tokenize-checkout/customers-and-cards}\n  * @namespace card\n */\nvar card = module.exports = {\n  schema: cardModel\n};\n\n/**\n * Get all saved cards from a customer\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards/get/}\n * @function all\n * @param {string} customer_id Customer ID\n * @memberof card\n */\ncard.all = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards',\n  method: 'GET'\n});\n\n/**\n * Get card from card's id and customer's id\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards_id/get}\n * @function get\n * @param {string} customer_id Customer ID\n * @param {string} id Card ID\n * @memberof card\n */\ncard.get = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards/:id',\n  method: 'GET'\n});\n\n/**\n * Get card from card's id and customer's id\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards/get/}\n * @function findById\n * @param {string} customer_id Customer ID\n * @param {string} id Card ID\n * @memberof card\n */\ncard.findById = card.get;\n\n/**\n * Create a new card for provided Customer ID\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards/post/}\n * @function create\n * @param {string} customer_id Customer ID\n * @memberof card\n */\ncard.create = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards',\n  method: 'POST'\n});\n\n/**\n * Create a new card for provided Customer ID\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards/post/}\n * @function create\n * @param {string} customer_id Customer ID\n * @memberof card\n */\ncard.save = card.create;\n\n/**\n * Update card from customer id\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards_id/put/}\n * @function update\n * @param {string} customer_id Customer ID\n * @param {string} id Card ID\n * @memberof card\n */\ncard.update = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards/:id',\n  method: 'PUT'\n});\n\n/**\n * Delete card from customer id\n * [Click here for more infos]{@link https://www.mercadopago.com/developers/en/reference/cards/_customers_customer_id_cards_id/delete/}\n * @function delete\n * @param {string} customer_id Customer ID\n * @param {string} id Card ID\n * @memberof card\n */\ncard.delete = requestManager.describe({\n  path: '/v1/customers/:customer_id/cards/:id',\n  method: 'DELETE'\n});\n"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,oBAAD,CAA5B;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,IAAI,GAAGC,MAAM,CAACC,OAAP,GAAiB;EAC1BC,MAAM,EAAEJ;AADkB,CAA5B;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,IAAI,CAACI,GAAL,GAAWP,cAAc,CAACQ,QAAf,CAAwB;EACjCC,IAAI,EAAE,kCAD2B;EAEjCC,MAAM,EAAE;AAFyB,CAAxB,CAAX;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,IAAI,CAACQ,GAAL,GAAWX,cAAc,CAACQ,QAAf,CAAwB;EACjCC,IAAI,EAAE,sCAD2B;EAEjCC,MAAM,EAAE;AAFyB,CAAxB,CAAX;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,IAAI,CAACS,QAAL,GAAgBT,IAAI,CAACQ,GAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAR,IAAI,CAACU,MAAL,GAAcb,cAAc,CAACQ,QAAf,CAAwB;EACpCC,IAAI,EAAE,kCAD8B;EAEpCC,MAAM,EAAE;AAF4B,CAAxB,CAAd;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,IAAI,CAACW,IAAL,GAAYX,IAAI,CAACU,MAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAV,IAAI,CAACY,MAAL,GAAcf,cAAc,CAACQ,QAAf,CAAwB;EACpCC,IAAI,EAAE,sCAD8B;EAEpCC,MAAM,EAAE;AAF4B,CAAxB,CAAd;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAP,IAAI,CAACa,MAAL,GAAchB,cAAc,CAACQ,QAAf,CAAwB;EACpCC,IAAI,EAAE,sCAD8B;EAEpCC,MAAM,EAAE;AAF4B,CAAxB,CAAd"},"metadata":{},"sourceType":"script"}