{"ast":null,"code":"var _jsxFileName = \"C:\\\\Backup\\\\Desktop\\\\LUCAS\\\\henry\\\\PROYECTO FINAL\\\\PF-Rebirth\\\\PF-Rebirth\\\\client\\\\src\\\\Pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Cards from \"../Components/Card/Card\";\nimport Paginations from \"../Components/Pagination/Pagination\";\nimport Navbar from \"../Components/Navbar/Navbar\";\nimport FiltersBar from \"../Components/FilterBar/FilterBar\";\nimport Footer from \"../Components/Footer/Footer\";\nimport Header from \"../Components/Header/Header\";\nimport Testimonials from \"../Components/Testimonials/Testimonials.jsx\";\nimport \"../index.css\";\nimport { getLocation, filterByLocation, filterBySex, filterBySize, fullFilterAge, fullFilterLocation, fullFilterSex, fullFilterSize, getPetFilters, getPetNames, orderByAge, getFavs, getPets } from \"../Redux/Actions/index.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  var _useLocation$search;\n\n  const petType = (_useLocation$search = useLocation().search) === null || _useLocation$search === void 0 ? void 0 : _useLocation$search.replace(\"?type=\", \"\");\n  const dispatch = useDispatch();\n  const pets = useSelector(store => store.filteredPets); // const loading = useSelector(store => store.loading)\n  //Paginado//\n\n  const [refresh] = useState(1); // const [page, setPage] = useState(1);\n  // const [cantPets] = useState(6);\n  // const lastPet = page * cantPets;\n  // const firstPet = lastPet - cantPets;\n  // const petsPage = pets?.slice(firstPet, lastPet);\n  // // const cantPages = Math.ceil(pets.length / cantPets);\n  // const paginado = (pageNum) => {\n  //   setPage(pageNum);\n  // };\n  // logica de la paginacion, filtro por pagina y loading\n\n  const [currentPage, setCurrentPage] = useState(1); //lo seteo en 1 porque siempre arranco por la primer pagina\n\n  const petsPerPage = 6; //cantidad de pets que debe haber por pagina\n\n  const indexOfLastPet = currentPage * petsPerPage; // 1 * 6 = 6\n\n  const indexOfFirstPet = indexOfLastPet - petsPerPage; // 6 - 6 = 0\n\n  const currentPet = pets.slice(indexOfFirstPet, indexOfLastPet); //para dividir la cantidad de pets por pagina\n\n  const pagination = pageNumber => setCurrentPage(pageNumber);\n\n  let user = null;\n\n  if (localStorage.user) {\n    const userJson = localStorage.getItem(\"user\");\n    user = JSON.parse(userJson);\n  }\n\n  if (user) {\n    var mail = user.mail ? user.mail : user.email;\n  }\n\n  useEffect(() => {\n    dispatch(getPetFilters(petType));\n    dispatch(getLocation(petType));\n    dispatch(getPets());\n  }, [dispatch, petType]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [currentPage]);\n  useEffect(() => {\n    if (user) {\n      dispatch(getFavs(mail));\n    }\n  }, []);\n\n  function handleFilterBySex(e) {\n    dispatch(filterBySex(e));\n    dispatch(fullFilterSex(e));\n    setCurrentPage(1);\n  }\n\n  function handleFilterBySize(e) {\n    dispatch(filterBySize(e));\n    dispatch(fullFilterSize(e));\n    setCurrentPage(1);\n  }\n\n  function handleFilterByLocation(e) {\n    dispatch(filterByLocation(e));\n    dispatch(fullFilterLocation(e));\n    setCurrentPage(1);\n  }\n\n  function handleOrderByAge(e) {\n    dispatch(orderByAge(e));\n    dispatch(fullFilterAge(e));\n    setCurrentPage(1);\n  }\n\n  function handleSearchName(search) {\n    dispatch(getPetNames(petType, search));\n    setCurrentPage(1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        type: petType,\n        setPage: setCurrentPage,\n        current: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FiltersBar, {\n        handleFilterBySex: handleFilterBySex,\n        handleFilterBySize: handleFilterBySize,\n        handleFilterByLocation: handleFilterByLocation,\n        handleOrderByAge: handleOrderByAge,\n        handleSearchName: handleSearchName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxWrap\",\n        children: refresh && currentPet.map((p, i) => {\n          return /*#__PURE__*/_jsxDEV(Cards, {\n            image: p.image,\n            name: p.name,\n            breed: p.race,\n            age: p.age,\n            gender: p.gender,\n            size: p.size,\n            description: p.description,\n            id: p.id,\n            location: p.location,\n            userMail: p.userMail\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginations, {\n      currentPage: currentPage,\n      petsPerPage: petsPerPage,\n      pets: pets.length,\n      pagination: pagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Testimonials, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"wePj5TIt2qJzlf0erB5sVcTyaig=\", false, function () {\n  return [useLocation, useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Container","Cards","Paginations","Navbar","FiltersBar","Footer","Header","Testimonials","getLocation","filterByLocation","filterBySex","filterBySize","fullFilterAge","fullFilterLocation","fullFilterSex","fullFilterSize","getPetFilters","getPetNames","orderByAge","getFavs","getPets","useDispatch","useSelector","useEffect","useState","useLocation","Home","petType","search","replace","dispatch","pets","store","filteredPets","refresh","currentPage","setCurrentPage","petsPerPage","indexOfLastPet","indexOfFirstPet","currentPet","slice","pagination","pageNumber","user","localStorage","userJson","getItem","JSON","parse","mail","email","window","scrollTo","handleFilterBySex","e","handleFilterBySize","handleFilterByLocation","handleOrderByAge","handleSearchName","map","p","i","image","name","race","age","gender","size","description","id","location","userMail","Math","random","length"],"sources":["C:/Backup/Desktop/LUCAS/henry/PROYECTO FINAL/PF-Rebirth/PF-Rebirth/client/src/Pages/Home.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Cards from \"../Components/Card/Card\";\r\nimport Paginations from \"../Components/Pagination/Pagination\";\r\nimport Navbar from \"../Components/Navbar/Navbar\";\r\nimport FiltersBar from \"../Components/FilterBar/FilterBar\";\r\nimport Footer from \"../Components/Footer/Footer\";\r\nimport Header from \"../Components/Header/Header\";\r\nimport Testimonials from \"../Components/Testimonials/Testimonials.jsx\";\r\nimport \"../index.css\";\r\n\r\nimport {\r\n  getLocation,\r\n  filterByLocation,\r\n  filterBySex,\r\n  filterBySize,\r\n  fullFilterAge,\r\n  fullFilterLocation,\r\n  fullFilterSex,\r\n  fullFilterSize,\r\n  getPetFilters,\r\n  getPetNames,\r\n  orderByAge,\r\n  getFavs,\r\n  getPets,\r\n} from \"../Redux/Actions/index.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const petType = useLocation().search?.replace(\"?type=\", \"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const pets = useSelector((store) => store.filteredPets);\r\n  // const loading = useSelector(store => store.loading)\r\n\r\n  //Paginado//\r\n  const [refresh] = useState(1);\r\n  // const [page, setPage] = useState(1);\r\n  // const [cantPets] = useState(6);\r\n  // const lastPet = page * cantPets;\r\n  // const firstPet = lastPet - cantPets;\r\n  // const petsPage = pets?.slice(firstPet, lastPet);\r\n  // // const cantPages = Math.ceil(pets.length / cantPets);\r\n\r\n  // const paginado = (pageNum) => {\r\n  //   setPage(pageNum);\r\n  // };\r\n\r\n  // logica de la paginacion, filtro por pagina y loading\r\n  const [currentPage, setCurrentPage] = useState(1); //lo seteo en 1 porque siempre arranco por la primer pagina\r\n  const petsPerPage = 6; //cantidad de pets que debe haber por pagina\r\n  const indexOfLastPet = currentPage * petsPerPage; // 1 * 6 = 6\r\n  const indexOfFirstPet = indexOfLastPet - petsPerPage; // 6 - 6 = 0\r\n  const currentPet = pets.slice(indexOfFirstPet, indexOfLastPet); //para dividir la cantidad de pets por pagina\r\n  const pagination = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  let user = null;\r\n  if (localStorage.user) {\r\n    const userJson = localStorage.getItem(\"user\");\r\n    user = JSON.parse(userJson);\r\n  }\r\n\r\n  if (user) {\r\n    var mail = user.mail ? user.mail : user.email;\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getPetFilters(petType));\r\n    dispatch(getLocation(petType));\r\n    dispatch(getPets());\r\n  }, [dispatch, petType]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(getFavs(mail));\r\n    }\r\n  }, []);\r\n\r\n  function handleFilterBySex(e) {\r\n    dispatch(filterBySex(e));\r\n    dispatch(fullFilterSex(e));\r\n    setCurrentPage(1);\r\n  }\r\n  function handleFilterBySize(e) {\r\n    dispatch(filterBySize(e));\r\n    dispatch(fullFilterSize(e));\r\n    setCurrentPage(1);\r\n  }\r\n  function handleFilterByLocation(e) {\r\n    dispatch(filterByLocation(e));\r\n    dispatch(fullFilterLocation(e));\r\n    setCurrentPage(1);\r\n  }\r\n  function handleOrderByAge(e) {\r\n    dispatch(orderByAge(e));\r\n    dispatch(fullFilterAge(e));\r\n    setCurrentPage(1);\r\n  }\r\n  function handleSearchName(search) {\r\n    dispatch(getPetNames(petType, search));\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Container>\r\n        <Header type={petType} setPage={setCurrentPage} current={currentPage} />\r\n        <FiltersBar\r\n          handleFilterBySex={handleFilterBySex}\r\n          handleFilterBySize={handleFilterBySize}\r\n          handleFilterByLocation={handleFilterByLocation}\r\n          handleOrderByAge={handleOrderByAge}\r\n          handleSearchName={handleSearchName}\r\n        />\r\n        <div className=\"boxWrap\">\r\n          {refresh &&\r\n            currentPet.map((p, i) => {\r\n              return (\r\n                <Cards\r\n                  key={Math.random()}\r\n                  image={p.image}\r\n                  name={p.name}\r\n                  breed={p.race}\r\n                  age={p.age}\r\n                  gender={p.gender}\r\n                  size={p.size}\r\n                  description={p.description}\r\n                  id={p.id}\r\n                  location={p.location}\r\n                  userMail={p.userMail}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </Container>\r\n      <Paginations\r\n        currentPage={currentPage}\r\n        petsPerPage={petsPerPage}\r\n        pets={pets.length}\r\n        pagination={pagination}\r\n      />\r\n      <Testimonials />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}