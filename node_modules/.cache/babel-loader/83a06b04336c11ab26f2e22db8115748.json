{"ast":null,"code":"import star1 from '../Assets/Testimoniales/Star1.png';\nimport star2 from '../Assets/Testimoniales/Star2.png';\nimport star3 from '../Assets/Testimoniales/Star3.png';\nimport star4 from '../Assets/Testimoniales/Star4.png';\nimport star5 from '../Assets/Testimoniales/Star5.png';\nimport { VALIDATE_EMAIL, VALIDATE_NAME, VALIDATE_PASSWORD } from '../Tools/regexForm.js';\nexport function showStar(number) {\n  /*\r\n    La funcion evalua un numero y devuelve una imagen de calificacion con base a este\r\n  */\n  switch (number) {\n    case 1:\n      return star1;\n\n    case 2:\n      return star2;\n\n    case 3:\n      return star3;\n\n    case 4:\n      return star4;\n\n    case 5:\n      return star5;\n\n    default:\n      return null;\n  }\n}\nexport const validateErrors = objUser => {\n  let errors = {};\n  /*\r\n    La funcion valida que el nombre y los apellidos no tengan numeros, que el username sea existente, \r\n    valida que el email sea correcto y cumpla con las caracteristicas de un email, la password debe \r\n    cumplir con las siguientes condiciones: al menos un caracter, una mayuscula, una minuscula, logitud \r\n    entre 8 - 15 caracters, al menos un caracter especial y un numero\r\n      Finalmente valida si las passwords son identicas en que caso de fallar algun filtro, return un objeto \r\n    con los errores\r\n  */\n\n  if (!objUser.formBasicName) {\n    errors.name = 'You must enter your name';\n  } else if (!VALIDATE_NAME.test(objUser.formBasicName)) {\n    errors.name = 'The name must not contain numbers';\n  }\n\n  if (!objUser.formBasicLastName) {\n    errors.lastName = 'You must enter your lastname';\n  } else if (!VALIDATE_NAME.test(objUser.formBasicLastName)) {\n    errors.lastName = 'The lastname must not contain numbers';\n  }\n\n  if (!objUser.formBasicUserName) {\n    errors.userName = 'You must enter a valid username';\n  }\n\n  if (!objUser.formBasicEmail) {\n    errors.email = 'You must enter an email';\n  } else if (!VALIDATE_EMAIL.test(objUser.formBasicEmail)) {\n    errors.email = 'You must enter a valid email';\n  }\n\n  if (!objUser.formBasicPassword) {\n    errors.password = 'You must enter a valid password';\n  } else if (!VALIDATE_PASSWORD.test(objUser.formBasicPassword)) {\n    errors.password = 'You must enter a valid password';\n  }\n\n  if (objUser.formBasicConfirmPassword !== objUser.formBasicPassword) {\n    errors.confirmPassword = \"The passwords doesn't match\";\n  }\n\n  return errors;\n};","map":{"version":3,"names":["star1","star2","star3","star4","star5","VALIDATE_EMAIL","VALIDATE_NAME","VALIDATE_PASSWORD","showStar","number","validateErrors","objUser","errors","formBasicName","name","test","formBasicLastName","lastName","formBasicUserName","userName","formBasicEmail","email","formBasicPassword","password","formBasicConfirmPassword","confirmPassword"],"sources":["C:/Backup/Desktop/LUCAS/henry/PROYECTO FINAL/PF-Rebirth/PF-Rebirth/client/src/Tools/functions.js"],"sourcesContent":["import star1 from '../Assets/Testimoniales/Star1.png';\r\nimport star2 from '../Assets/Testimoniales/Star2.png';\r\nimport star3 from '../Assets/Testimoniales/Star3.png';\r\nimport star4 from '../Assets/Testimoniales/Star4.png';\r\nimport star5 from '../Assets/Testimoniales/Star5.png';\r\nimport { VALIDATE_EMAIL, VALIDATE_NAME, VALIDATE_PASSWORD } from '../Tools/regexForm.js';\r\n\r\n\r\nexport function showStar(number){\r\n  /*\r\n    La funcion evalua un numero y devuelve una imagen de calificacion con base a este\r\n  */\r\n    switch (number) {\r\n      case 1:\r\n        return star1 \r\n      case 2:\r\n        return star2\r\n      case 3:\r\n        return star3 \r\n      case 4:\r\n        return star4 \r\n      case 5:\r\n        return star5 \r\n      default:\r\n        return null\r\n    }\r\n}\r\n\r\nexport const validateErrors = (objUser) => {\r\n\r\n  let errors = {};\r\n\r\n  /*\r\n    La funcion valida que el nombre y los apellidos no tengan numeros, que el username sea existente, \r\n    valida que el email sea correcto y cumpla con las caracteristicas de un email, la password debe \r\n    cumplir con las siguientes condiciones: al menos un caracter, una mayuscula, una minuscula, logitud \r\n    entre 8 - 15 caracters, al menos un caracter especial y un numero\r\n\r\n    Finalmente valida si las passwords son identicas en que caso de fallar algun filtro, return un objeto \r\n    con los errores\r\n  */\r\n    if(!objUser.formBasicName){\r\n      errors.name = 'You must enter your name';\r\n  }else if(!VALIDATE_NAME.test(objUser.formBasicName)){\r\n      errors.name = 'The name must not contain numbers'\r\n  }\r\n\r\n  if(!objUser.formBasicLastName){\r\n      errors.lastName = 'You must enter your lastname'\r\n  }else if(!VALIDATE_NAME.test(objUser.formBasicLastName)){\r\n      errors.lastName = 'The lastname must not contain numbers'\r\n  }\r\n\r\n  if(!objUser.formBasicUserName){\r\n      errors.userName = 'You must enter a valid username'\r\n  }\r\n\r\n  if(!objUser.formBasicEmail){\r\n      errors.email = 'You must enter an email'\r\n  }else if(!VALIDATE_EMAIL.test(objUser.formBasicEmail)){\r\n      errors.email = 'You must enter a valid email'\r\n  }\r\n\r\n  if(!objUser.formBasicPassword){\r\n      errors.password = 'You must enter a valid password'\r\n  }else if(!VALIDATE_PASSWORD.test(objUser.formBasicPassword)){\r\n      errors.password = 'You must enter a valid password'\r\n  }\r\n\r\n  if(objUser.formBasicConfirmPassword !== objUser.formBasicPassword){\r\n      errors.confirmPassword = \"The passwords doesn't match\"\r\n  }\r\n\r\n  return errors\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,mCAAlB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,SAASC,cAAT,EAAyBC,aAAzB,EAAwCC,iBAAxC,QAAiE,uBAAjE;AAGA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAAyB;EAC9B;AACF;AACA;EACI,QAAQA,MAAR;IACE,KAAK,CAAL;MACE,OAAOT,KAAP;;IACF,KAAK,CAAL;MACE,OAAOC,KAAP;;IACF,KAAK,CAAL;MACE,OAAOC,KAAP;;IACF,KAAK,CAAL;MACE,OAAOC,KAAP;;IACF,KAAK,CAAL;MACE,OAAOC,KAAP;;IACF;MACE,OAAO,IAAP;EAZJ;AAcH;AAED,OAAO,MAAMM,cAAc,GAAIC,OAAD,IAAa;EAEzC,IAAIC,MAAM,GAAG,EAAb;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,IAAG,CAACD,OAAO,CAACE,aAAZ,EAA0B;IACxBD,MAAM,CAACE,IAAP,GAAc,0BAAd;EACH,CAFC,MAEI,IAAG,CAACR,aAAa,CAACS,IAAd,CAAmBJ,OAAO,CAACE,aAA3B,CAAJ,EAA8C;IAChDD,MAAM,CAACE,IAAP,GAAc,mCAAd;EACH;;EAED,IAAG,CAACH,OAAO,CAACK,iBAAZ,EAA8B;IAC1BJ,MAAM,CAACK,QAAP,GAAkB,8BAAlB;EACH,CAFD,MAEM,IAAG,CAACX,aAAa,CAACS,IAAd,CAAmBJ,OAAO,CAACK,iBAA3B,CAAJ,EAAkD;IACpDJ,MAAM,CAACK,QAAP,GAAkB,uCAAlB;EACH;;EAED,IAAG,CAACN,OAAO,CAACO,iBAAZ,EAA8B;IAC1BN,MAAM,CAACO,QAAP,GAAkB,iCAAlB;EACH;;EAED,IAAG,CAACR,OAAO,CAACS,cAAZ,EAA2B;IACvBR,MAAM,CAACS,KAAP,GAAe,yBAAf;EACH,CAFD,MAEM,IAAG,CAAChB,cAAc,CAACU,IAAf,CAAoBJ,OAAO,CAACS,cAA5B,CAAJ,EAAgD;IAClDR,MAAM,CAACS,KAAP,GAAe,8BAAf;EACH;;EAED,IAAG,CAACV,OAAO,CAACW,iBAAZ,EAA8B;IAC1BV,MAAM,CAACW,QAAP,GAAkB,iCAAlB;EACH,CAFD,MAEM,IAAG,CAAChB,iBAAiB,CAACQ,IAAlB,CAAuBJ,OAAO,CAACW,iBAA/B,CAAJ,EAAsD;IACxDV,MAAM,CAACW,QAAP,GAAkB,iCAAlB;EACH;;EAED,IAAGZ,OAAO,CAACa,wBAAR,KAAqCb,OAAO,CAACW,iBAAhD,EAAkE;IAC9DV,MAAM,CAACa,eAAP,GAAyB,6BAAzB;EACH;;EAED,OAAOb,MAAP;AACD,CA9CM"},"metadata":{},"sourceType":"module"}