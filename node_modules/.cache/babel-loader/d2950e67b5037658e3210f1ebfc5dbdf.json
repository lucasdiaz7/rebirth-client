{"ast":null,"code":"import { useState, useEffect, createElement, Suspense } from 'react';\nexport { lazy } from 'react';\n\nfunction ClientSuspense(props) {\n  var state = useState(false);\n  var isClient = state[0];\n  var setClient = state[1];\n  useEffect(function () {\n    setClient(true);\n  }, [setClient]);\n  return isClient ? createElement(Suspense, props) : props.fallback;\n}\n\nexport { ClientSuspense as Suspense };","map":{"version":3,"names":["useState","useEffect","createElement","Suspense","lazy","ClientSuspense","props","state","isClient","setClient","fallback"],"sources":["C:/Backup/Desktop/LUCAS/henry/PROYECTO FINAL/PF-Rebirth/PF-Rebirth/client/node_modules/@uploadcare/react-widget/node_modules/@uploadcare/client-suspense/dist/index.js"],"sourcesContent":["import { useState, useEffect, createElement, Suspense } from 'react';\nexport { lazy } from 'react';\n\nfunction ClientSuspense (props) {\n  var state = useState(false);\n  var isClient = state[0];\n  var setClient = state[1];\n\n  useEffect(function () {\n    setClient(true);\n  }, [setClient]);\n\n  return isClient ? createElement(Suspense, props) : props.fallback\n}\n\nexport { ClientSuspense as Suspense };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,IAAT,QAAqB,OAArB;;AAEA,SAASC,cAAT,CAAyBC,KAAzB,EAAgC;EAC9B,IAAIC,KAAK,GAAGP,QAAQ,CAAC,KAAD,CAApB;EACA,IAAIQ,QAAQ,GAAGD,KAAK,CAAC,CAAD,CAApB;EACA,IAAIE,SAAS,GAAGF,KAAK,CAAC,CAAD,CAArB;EAEAN,SAAS,CAAC,YAAY;IACpBQ,SAAS,CAAC,IAAD,CAAT;EACD,CAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;EAIA,OAAOD,QAAQ,GAAGN,aAAa,CAACC,QAAD,EAAWG,KAAX,CAAhB,GAAoCA,KAAK,CAACI,QAAzD;AACD;;AAED,SAASL,cAAc,IAAIF,QAA3B"},"metadata":{},"sourceType":"module"}